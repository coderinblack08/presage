rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userOwnsResource (userId) {
      return request.auth.uid == userId;
    }

    function userIsAuthenticated () {
      return request.auth.uid != null; 
    }

    function isValidUserName(username) {
      return username.matches('^([a-z0-9_.]){1,30}$');
    }

    function isUserNameAvailable(username) {
      return isValidUserName(username) && !exists(/databases/$(database)/documents/usernames/$(username));
    }

    match /users/{user} {
      allow write: if userIsAuthenticated() && userOwnsResource(user) && userOwnsResource(request.resource.data.uid) && isUserNameAvailable(request.resource.data.username);
      allow read: if true;
    }

    match /usernames/{username} {
      allow get: if isValidUserName(username);
    }
  }
}