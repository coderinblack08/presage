rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow write: if request.auth.uid == userId && !exists(/databases/$(database)/documents/usernames/$(request.resource.data.username));
      allow read: if true;
    }
    
    match /journals/{journalId} {
      allow write: if willBeOwner();
      allow read: if true;
    }

    match /emails/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /usernames/{username} {
      allow write: if request.auth.uid == request.resource.data.uid;
      allow read: if true;
    }

    match /articles/{articleId} {
      allow write: if willBeOwner();
      allow delete: if isOwner();
      allow read: if isOwner() || resource.data.isPublished == true;
    }
  }
}

function isUser(uid) {
  return isSignedIn() && request.auth.uid == uid;
}

function isSignedIn() {
  return request.auth.uid != null;
}

function isOwner(){
  return isUser(currentData().userId);
}

function willBeOwner(){
  return isUser(incomingData().userId);
}

function currentData() {
  return resource.data;
}

function incomingData() {
  return request.resource.data;
}
